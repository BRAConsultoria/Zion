<?phpinclude_once($_SESSION['FMBase'].'manipula_imagem.class.php');include_once($_SESSION['FMBase'].'conexao.class.php');class ArquivoUpload extends ManipulaImagem{    /*     * $CFG  = Array de Configurações     * $CodigoReferencia = Código de referencia da tabela Pai     * $Operacao = Cad, Alt     * $TratarComo = Imagem ou Arquivo. Com imagem é possivel criar tumb e redimencionar     */    public function sisUpload($CFG, $CodigoReferencia, $Operacao, $TratarComo = "Arquivo")    {              //Inicia Conexão        $Con = Conexao::conectar();                ####Recuperando Configurações        $CampoImagem           = ($Operacao == "Alt") ? $CFG['Nome'].$CodigoReferencia : $CFG['Nome']; //Campo de Imagem                $Tabela                = $CFG['Tabela'];//Tabela onde deve ser gravada as informações do arquivo        $Status                = $CFG['Status'];//Status do Campo                $Prefixo               = $CFG['Prefixo'];//Texto de Prefixo para o arquivo        $Sufixo                = $CFG['Sufixo'];//Texto de Sufixo para o arquivo                $NomeFixo              = $CFG['NomeFixo'];//Nome fixo do arquivo                $DiretorioDestino      = $CFG['DiretorioDestino'];//Destino do arquivo                $DiretorioDestinoTB    = $CFG['DiretorioDestinoTB'];//Destino Tumb        $AlturaMaxima          = $CFG['AlturaMaxima'];//Altura maxima da imagem        $LarguraMaxima         = $CFG['LarguraMaxima'];//Largura Maxima da Imagem                $AlturaMaximaTB        = $CFG['AlturaMaximaTB'];//Altura maxima da imagem        $LarguraMaximaTB       = $CFG['LarguraMaximaTB'];//Largura Maxima da Imagem        $QualidadeImagem       = $CFG['QualidadeImagem'];//Qualidade da imagem        $ExtensaoPermitida     = $CFG['ExtensaoPermitida'];//Extensões de Arquivos Permitidas        $ExtensaoNaoPermitida  = $CFG['ExtensaoNaoPermitida'];//Extensões de Arquivos Não Permitidas        $TamanhoMaximo         = $CFG['TamanhoMaximo'];//Tamanho Maximo Permitido em bytes        $MinimoArquivos        = $CFG['MinimoArquivos'];//Numero minimo de arquivos que devem ser selecionados        $MaximoArquivos        = $CFG['MaximoArquivos'];//Numero maximo de arquivos que podem ser selecionados        $PermitirDuplicados    = $CFG['PermitirDuplicados'];//Indica se é permitido ou não arquivos com nomes duplicados        $HabilitarPrincipal    = $CFG['HabilitarPrincipal'];//Habilita Seleção de Arquivo como Principal        //Se status é false nem faz nada        if($Status === false) return;        //Inicio da manipulação        $Arquivos      = $_FILES[$CampoImagem];        $TotalDoForm   = count($_FILES[$CampoImagem]['name']);        $TratarComo    = strtoupper($TratarComo);        $UpsPermitido  = ini_get("max_file_uploads");                //Maximo de uploads ultrapassado - Existem servidorem que não retornan esse parametro        if($TotalDoForm > $UpsPermitido and !empty($UpsPermitido)) throw new Exception("Seu servidor permite envio de no maximo ".$UpsPermitido." arquivos simultaneos, remova alguns arquivos e tente novamente.");        //Verifica Diretórios        if(!is_dir($DiretorioDestino)) throw new Exception("O diretório de destino informado não existe.");        if($DiretorioDestinoTB != "" and !is_dir($DiretorioDestinoTB)) throw new Exception("O diretório de destino informado para o thumbnail não existe.");        //Se for alteração somar com arquivos existentes no banco        if($Operacao == "Alt")        {           //Iniciando Vetores           $NomesDoBanco     = array();                      $ArquivosDoBanco  = array();           $ArquivosQueFicam = array();           $ArquivosARemover = array();            //Cria vetor com arquivos que devem permanecer            if(is_array($_POST[$CampoImagem."Removidos"]))            {                foreach($_POST[$CampoImagem."Removidos"] as $ChaveMarcada)                {                    $ArquivosQueFicam[] = $ChaveMarcada;                    //Atualiza Informações dos Que Ficam                    $Principal = ($_POST[$CampoImagem."Principal"] == $ChaveMarcada and $HabilitarPrincipal == true) ? 'S' : 'N';                    $Con->executar("UPDATE ".$Tabela." SET Principal = '$Principal' WHERE ArquivoCod = $ChaveMarcada");                }                }                        $RS = $Con->executar("SELECT ArquivoCod, Nome FROM ".$Tabela." WHERE CodigoReferencia = $CodigoReferencia");            while($DadosBanco = mysqli_fetch_array($RS))            {                $NomesDoBanco[]    = $DadosBanco['Nome'];                $ArquivosDoBanco[] = $DadosBanco['ArquivoCod'];            }            if($MaximoArquivos{0} == "+")            {                $TotalArquivos  = $TotalDoForm;                $MaximoArquivos = substr($MaximoArquivos, 1);            }            else            {                $TotalArquivos  = count($NomesDoBanco) + $TotalDoForm;            }                        //Define Arquivos que serão removidos            $ArquivosARemover = array_diff($ArquivosDoBanco, $ArquivosQueFicam);        }        else        {            $TotalArquivos = $TotalDoForm;        }        if($MinimoArquivos != "" and $TotalArquivos < $MinimoArquivos) throw new Exception("Você deve selecionar no minimo ".$MinimoArquivos." arquivo".(($MinimoArquivos > 1) ? "s." : "."));        if($MaximoArquivos != "" and $TotalArquivos > $MaximoArquivos) throw new Exception("$TotalArquivos Você deve selecionar no maximo ".$MaximoArquivos." arquivo".(($MaximoArquivos > 1) ? "s." : "."));        //Usuario selecionou arquivos        if(is_array($_POST[$CampoImagem.'IdDaTela']))        {                   foreach($_POST[$CampoImagem.'IdDaTela'] as $Posicao)            {                if(empty($_FILES[$CampoImagem]['name'][$Posicao])) continue;                                //Verifica Duplicações                if($Operacao == "Alt" and $PermitirDuplicados === false)                {                    if(in_array($_FILES[$CampoImagem]['name'][$Posicao],$NomesDoBanco)) throw new Exception("O arquivo ".$_FILES[$CampoImagem]['name'][$Posicao]." já existe no servidor.");                }                //Verifica extenssão                $Extensao = strtolower($this->extenssaoArquivo($_FILES[$CampoImagem]['name'][$Posicao]));                if(is_array($ExtensaoPermitida))                {                    $ExtensaoPermitida = array_map(strtolower, $ExtensaoPermitida);                    if(!in_array($Extensao, $ExtensaoPermitida)) throw new Exception("Extensão para o arquivo ".$_FILES[$CampoImagem]['name'][$Posicao]." não é permitida. Use somente:".implode(", ", $ExtensaoPermitida));                }                if(is_array($ExtensaoNaoPermitida))                {                    $ExtensaoNaoPermitida = array_map(strtolower, $ExtensaoNaoPermitida);                    if(in_array($Extensao, $ExtensaoNaoPermitida)) throw new Exception("Extensão para o arquivo ".$_FILES[$CampoImagem]['name'][$Posicao]." não é permitida.");                }                if($TamanhoMaximo and $_FILES[$CampoImagem]['size'][$Posicao] > $TamanhoMaximo) throw new Exception("O tamanho maximo de arquivo permitido é ".(($TamanhoMaximo/1048576*100000)/100000)."MB");            }            //Inicia Transação            $Con->startTransaction();            //Inicia gravação em disco e banco            foreach($_POST[$CampoImagem.'IdDaTela'] as $Posicao)            {                if(empty($_FILES[$CampoImagem]['name'][$Posicao])) continue;                //Extensão                $Extensao = strtolower($this->extenssaoArquivo($_FILES[$CampoImagem]['name'][$Posicao]));                //Definindo o nome do arquivo                if($NomeFixo)                {                    $NomeArquivo = $NomeFixo.".".$Extensao;                }                else if($Prefixo or $Sufixo)                {                    $NomeArquivo = $Prefixo.$Posicao.$Sufixo.".".$Extensao;                }                else                {                    $NomeArquivo = $_FILES[$CampoImagem]['name'][$Posicao];                }                                $Principal = ($_POST[$CampoImagem."Principal"] == $Posicao and $HabilitarPrincipal == true) ? 'S' : 'N';                 //Grava na Tabela                $Con->executar("INSERT INTO ".$Tabela." (ArquivoCod, CodigoReferencia, Nome, Hash, Extensao, Downloads, DataCriacao, Principal) VALUES (NULL, $CodigoReferencia,'$NomeArquivo','','$Extensao',0,now(),'$Principal')");                $UID = $Con->ultimoInsertId();                //Definindo Hash                $Hash = crypt($NomeArquivo,mt_rand()).crypt($UID,mt_rand()).$UID;                //Remove barras do hash se existir                $Hash = str_replace("/", "9", $Hash);                $Hash = str_replace("\\", "8", $Hash);                //Atualiza Código Hash                $Con->executar("UPDATE ".$Tabela." SET Hash = '$Hash' WHERE ArquivoCod = $UID");                //Setando Destino                $DestinoCompleto = $DiretorioDestino.$Hash;                if($TratarComo == "IMAGEM")                {                    //Qualidade                    if($QualidadeImagem)                    {                        if(in_array($QualidadeImagem,range(1,100))) $this->setQualidade($QualidadeImagem);                    }                    //Grava o arquivo no diretorio                    $this->trataImagem($CampoImagem, $DestinoCompleto, $AlturaMaxima, $LarguraMaxima, '', $Posicao);                    //Grava TB                    if($DiretorioDestinoTB)                    {                        $DestinoCompletoTB = $DiretorioDestinoTB.$Hash;                        $this->trataImagem($CampoImagem, $DestinoCompletoTB, $AlturaMaximaTB, $LarguraMaximaTB, '', $Posicao);                    }                }                else if($TratarComo == "ARQUIVO")                {                    $this->upload($CampoImagem, $DestinoCompleto, '', $Posicao);                }                else                {                    throw new Exception("Tipo de Tratamento Invalido, use Arquivo ou Imagem.");                }            }            //Finaliza Transação            $Con->stopTransaction();        }        //Remove Arquivos        if($Operacao == "Alt" and !empty($ArquivosARemover))        {            foreach($ArquivosARemover as $CodigoARemover)            {                $this->removerArquivos($CFG, $CodigoReferencia, $CodigoARemover);            }        }            }    public function removerArquivos($CFG, $CodigoReferencia, $ArquivoCod = null)    {        //Inicia Conexão        $Con = Conexao::conectar();        $SqlWhere = empty($ArquivoCod) ? "CodigoReferencia = $CodigoReferencia" : "CodigoReferencia = $CodigoReferencia AND ArquivoCod = $ArquivoCod";        $RS = $Con->executar("SELECT ArquivoCod, Hash FROM ".$CFG['Tabela']." WHERE ".$SqlWhere);        $NL = $Con->nLinhas($RS);        if($NL < 1) return;        //Inicia Transação		$Con->startTransaction();        while($Dados = mysqli_fetch_array($RS))        {            //Remove do banco            $Con->executar("DELETE FROM ".$CFG['Tabela']." WHERE CodigoReferencia = $CodigoReferencia AND ArquivoCod = ".$Dados['ArquivoCod']);            //Diretorios            $DiretorioDestino   = $CFG['DiretorioDestino'];            $DiretorioDestinoTB = $CFG['DiretorioDestinoTB'];            try            {                //Tenta Remover do servidor                $this->removeArquivo($DiretorioDestino.$Dados['Hash']);                if($DiretorioDestinoTB)                {                    $this->removeArquivo($DiretorioDestinoTB.$Dados['Hash']);                }            }            catch(Exception $E)            {                //não faz nada.            }        }        //Finaliza Transação		$Con->stopTransaction();    }    public function visualizarArquivos($Tabela, $CodigoReferencia, $DiretorioDestino, $DiretorioDestinoTB = "")    {        $Con = Conexao::conectar();        $RS  = $Con->executar("SELECT ArquivoCod, CodigoReferencia, Nome, Extensao, Principal FROM ".$Tabela." WHERE CodigoReferencia = $CodigoReferencia");        $NR  = $Con->nLinhas($RS);        if($NR > 0)        {	        $HtmlArquivos.= '<div class="arquivos_titulo">Arquivos:</div>';				            while($Dados = mysqli_fetch_array($RS))            {	            $HtmlArquivos.= '<div class="upload_imagem">';				                $CaminhoTB = (empty($DiretorioDestinoTB)) ? urlencode($DiretorioDestino) : urlencode($DiretorioDestinoTB);                $Caminho   = urlencode($DiretorioDestino);                $MostraArquivo = '<a href="'.$_SESSION['UrlFMBase'].'arquivo_download.class.php?Caminho='.$Caminho.'&TB='.$Tabela.'&ArquivoCod='.$Dados['ArquivoCod'].'&Modo=Download" target="_blank"><img src="'.$_SESSION['UrlFMBase'].'arquivo_download.class.php?Caminho='.$CaminhoTB.'&TB='.$Tabela.'&ArquivoCod='.$Dados['ArquivoCod'].'&Modo=Ver" alt="'.$Dados['Nome'].'" border="0" /></a>';				//$MostraArquivo = '<a href="'.$_SESSION['UrlFMBase'].'arquivo_download.class.php?Caminho='.$Caminho.'&TB='.$Tabela.'&ArquivoCod='.$Dados['ArquivoCod'].'&Modo=Download" target="_blank"><img src="'.$_SESSION['UrlBase'].'arquivos/produtos/2/tb/11qTsnXw452ms12w1KVPry0Rcg10" alt="'.$Dados['Nome'].'" border="0" /></a>';                $HtmlArquivos .= $MostraArquivo;	            $HtmlArquivos.= '</div>';            }            $HtmlArquivos.= '<div style="clear:both;">&nbsp;</div>';        }        return $HtmlArquivos;    }}