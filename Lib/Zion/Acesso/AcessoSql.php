<?php/** * @author Pablo Vanni - pablovanni@gmail.com * @since 28/02/2005 * Última Atualização: 14/10/2014 * Autualizada Por: Pablo Vanni - pablovanni@gmail.com */namespace Zion\Acesso;class AcessoSql{    protected $con;    public function __construct()    {        $this->con = \Zion\Banco\Conexao::conectar();    }    /**     * Retorna o objeto QueryBuilder montando o sql para retornar a descrição      * do módulo indicado pelo parametro     * @param string $moduloNome     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function dadosModulo($moduloNome)    {        $qb = $this->con->link()->createQueryBuilder();        $qb->select('moduloCod', 'grupoCod', 'moduloCodReferente', 'moduloNome', 'moduloNomeMenu', 'moduloDesc', 'moduloVisivelMenu', 'moduloPosicao', 'moduloBase', 'moduloClass')                ->from('_modulo', '')                ->where($qb->expr()->eq('moduloCod', ':moduloNome'))                ->setParameter('moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }    /**     * Retorna o objeto QueryBuilder montando o sql para verificar      * se o usuário tem permissão para acessar o módulo     * @param string $moduloNome     * @param string $acaoModuloIdPermissao     * @param int $usuarioCod     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function permissaoAcao($moduloNome, $acaoModuloIdPermissao, $usuarioCod)    {        $qb = $this->con->link()->createQueryBuilder();        $qb->select('a.usuarioCod')                ->from('_permissao', 'a')                ->innerJoin('a', '_acao_modulo', 'b', 'a.acaoModuloCod = b.acaoModuloCod')                ->innerJoin('b', '_modulo', 'c', 'c.moduloCod = b.moduloCod')                ->where($qb->expr()->eq('a.usuarioCod', ':usuarioCod'))                ->andWhere($qb->expr()->eq('b.acaoModuloIdPermissao', ':acaoModuloIdPermissao'))                ->andWhere($qb->expr()->eq('c.moduloNome', ':moduloNome'))                ->setParameter('usuarioCod', $usuarioCod, \PDO::PARAM_INT)                ->setParameter('acaoModuloIdPermissao', $acaoModuloIdPermissao, \PDO::PARAM_STR)                ->setParameter('moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }    /**     * Retorna o objeto QueryBuilder montando o sql para retornar      * as opções de módulo que o usuário tem direito     * @param string $moduloNome     * @param int $usuarioCod     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function permissoesModulo($moduloNome, $usuarioCod)    {        $qb = $this->con->link()->createQueryBuilder();        $qb->select('b.acaoModuloCod', 'b.moduloCod', 'b.acaoModuloPermissao', 'b.acaoModuloIdPermissao', 'b.acaoModuloClass', 'b.acaoModuloIcon', 'b.acaoModuloToolTipComPermissao', 'b.acaoModuloToolTipeSemPermissao', 'b.acaoModuloFuncaoJS', 'b.acaoModuloPosicao', 'b.acaoModuloApresentacao')                ->from('_permissao', 'a')                ->innerJoin('a', '_acao_modulo', 'b', 'a.acaoModuloCod = b.acaoModuloCod')                ->innerJoin('b', '_modulo', 'c', 'c.moduloCod = b.moduloCod')                ->where($qb->expr()->eq('a.usuarioCod', ':usuarioCod'))                ->andWhere($qb->expr()->eq('c.moduloNome', ':moduloNome'))                ->setParameter(':usuarioCod', $usuarioCod, \PDO::PARAM_INT)                ->setParameter(':moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }    /**     * Retorna o objeto QueryBuilder montando o sql para retornar      * os dados de uma ação do módulo     * @param string $moduloNome     * @param string $acaoModuloIdPermissao     * @return \Doctrine\DBAL\Query\QueryBuilder     */    public function dadosAcaoModulo($moduloNome, $acaoModuloIdPermissao)    {        $qb = $this->con->link()->createQueryBuilder();        $qb->select('a.acaoModuloCod', 'a.moduloCod', 'a.acaoModuloPermissao', 'a.acaoModuloIdPermissao', 'a.acaoModuloClass', 'a.acaoModuloIcon', 'a.acaoModuloToolTipComPermissao', 'a.acaoModuloToolTipeSemPermissao', 'a.acaoModuloFuncaoJS', 'a.acaoModuloPosicao', 'a.acaoModuloApresentacao')                ->from('_acao_modulo', 'a')                ->innerJoin('a', '_modulo', 'b', 'a.moduloCod = b.moduloCod')                ->where($qb->expr()->eq('a.acaoModuloIdPermissao', ':acaoModuloIdPermissao'))                ->andWhere($qb->expr()->eq('b.moduloNome', ':moduloNome'))                ->setParameter(':acaoModuloIdPermissao', $acaoModuloIdPermissao, \PDO::PARAM_STR)                ->setParameter(':moduloNome', $moduloNome, \PDO::PARAM_STR);        return $qb;    }}