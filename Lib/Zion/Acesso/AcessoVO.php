<?php/** * @author Pablo Vanni - pablovanni@gmail.com * @since 23/02/2005 * Última Atualização: 14/10/2014 * Autualizada Por: Pablo Vanni - pablovanni@gmail.com */namespace Zion\Acesso;abstract class AcessoVO{    private $usuarioCod;    private $moduloNome;    private $acaoModuloIdPermissao;    /**     *      * @param int $valor     * @return \Zion\Acesso\AcessoVO     */    public function setUsuarioCod($valor)    {        if (!\is_numeric($valor)) {            throw new \Exception('Código do usuário inválido!');        }        $this->usuarioCod = $valor;        return $this;    }    public function getUsuarioCod()    {        return $this->usuarioCod;    }    /**     *      * @param string $valor     * @return \Zion\Acesso\AcessoVO     */    public function setModuloNome($valor)    {        if (!\is_string($valor)) {            throw new \Exception('Nome do módulo é inválido!');        }        $this->moduloNome = $valor;        return $this;    }    public function getModuloNome()    {        return $this->moduloNome;    }    /**     *      * @param string $valor     * @return \Zion\Acesso\AcessoVO     */    public function setAcaoModuloIdPermissao($valor)    {        if (!\is_string($valor)) {            throw new \Exception('Ação do módulo é inválida!');        }        $this->acaoModuloIdPermissao = $valor;        return $this;    }    public function getAcaoModuloIdPermissao()    {        return $this->acaoModuloIdPermissao;    }}