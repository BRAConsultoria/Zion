<?namespace Zion\Paginacao;class Parametros{    public static $Parametros = array();        public static function limpaParametros()    {        self::$Parametros = array();    }        public static function setParametros($metodo, $valores)    {        switch (strtoupper($metodo)) {            case "GET":                foreach ($valores as $valor) {                    if ($_GET[$valor] != '') {                        self::$Parametros[$valor] = $_GET[$valor];                    }                }                break;            case "POST":                foreach ($valores as $valor) {                    if ($_POST[$valor] != '') {                        self::$Parametros[$valor] = $_POST[$valor];                    }                }                break;            case "REQUEST":                foreach ($valores as $valor) {                    if ($_REQUEST[$valor] != '') {                        self::$Parametros[$valor] = $_REQUEST[$valor];                    }                }                break;            case "FULL":                foreach ($valores as $valor => $conteudo) {                    self::$Parametros[$valor] = $conteudo;                }                break;        }    }    public static function getQueryString()    {        if (is_array(self::$Parametros) and ! empty(self::$Parametros)) {            foreach (self::$Parametros as $campo => $valor) {                $query .= "&" . $campo . "=" . urlencode($valor);            }            return substr($query, 1);        } else {            return "";        }    }    public static function addQueryString($queryAtual, $campoValor)    {        if (!empty($queryAtual)) {            $vCampos = explode("&", $queryAtual);            if (is_array($vCampos)) {                foreach ($vCampos as $campoJunto) {                    $vetJunto = explode("=", $campoJunto);                    $arrayRetorno[$vetJunto[0]] = $vetJunto[1];                }                foreach ($campoValor as $campo => $valor)                    $arrayRetorno[$campo] = $valor;                foreach ($arrayRetorno as $campo => $valor)                    $novaQuery.="&" . $campo . "=" . $valor;                return substr($novaQuery, 1);            }        } else {            foreach ($campoValor as $campo => $valor)                $novaQuery.= "&" . $campo . "=" . $valor;            return substr($novaQuery, 1);        }    }}