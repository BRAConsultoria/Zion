<? /***	@copyright DEMP - Soluções em Tecnologia da Informação Ltda*	@author Pablo Vanni - pablovanni@gmail.com*	@since 23/02/2005*	<br>Última Atualização: 24/03/2005<br>*	Autualizada Por: Pablo Vanni - pablovanni@gmail.com<br>*	@name  Paginação de resultado para uma consulta no banco de dados* 	@version 1.0* 	@package Framework*///Classes Nescessáriasinclude_once($_SESSION['FMBase'].'paginacao.gs.php');include_once($_SESSION['FMBase'].'conexao.class.php');include_once($_SESSION['FMBase'].'form_campos.class.php');class Paginacao extends PaginacaoGS {    /**    *	Atributos da Classe    */    private $Con;    /**    *	Metodo Construtor    *	Envia E-mail com cabeçalho HTML    *	@return VOID    */    public function __construct($Con = NULL)    {        if(!$Con)        {            $this->Con = Conexao::conectar();        }        else        {            $this->Con = $Con;        }    }    /**    *	Retorna um ResultSet com um numero determinado de QLinhas    *	@param QLinhas Inteiro - Número de QLinhas a retotnar no RS    *	@param Sql String - Query SQL que irá selecionar os dados    *	@param PaginaAtual Inteiro - Página atual dos QLinhas    * 	@param Chave Inteiro - Campo Chave pelo qual deve ser ordenado os resultados    * 	@param QuemOrdena Inteiro - Número de QLinhas a retotnar no RS    * 	@param TipoOrdenacao String - Número de QLinhas a retotnar no RS    * 	@param Ordena String - Número de QLinhas a retotnar no RS    *	@return ResultSet    */    public function rsPaginado()    {        $QLinhas       = parent::getQLinhas();        $Sql           = parent::getSql();                $PaginaAtual   = parent::getPaginaAtual();        $Chave         = parent::getChave();        $TipoOrdenacao = parent::getTipoOrdenacao();        $QuemOrdena    = parent::getQuemOrdena();        $AlterarLinhas = parent::getAlterarLinhas();        $LimitAtivo    = parent::getLimitAtivo();        //QLinhas        try        {            if($AlterarLinhas === true)            {                if(MODULO and !empty($_SESSION['UsuarioCod']))                {                    $NumeroRegistros = $this->Con->execRLinha("SELECT Registros FROM _usuario_paginacao WHERE ModuloNome = '".MODULO."' AND UsuarioCod =".$_SESSION['UsuarioCod'],"Registros");                }                else                {                    $NumeroRegistros = 0;                    }                                $QLinhas = (empty($NumeroRegistros)) ? parent::getQLinhas() : $NumeroRegistros;                parent::setQLinhas($QLinhas);            }            else            {                $QLinhas = parent::getQLinhas();            }        }        catch(Exception $E)        {            $QLinhas = parent::getQLinhas();        }        //Extremo dos Proximos QLinhas        $Inicio = ($PaginaAtual == 1) ? 0 :(($PaginaAtual * $QLinhas) - $QLinhas);        //Verifica Ordenção        if(!empty($QuemOrdena))        {            $Ordem = " ORDER BY ".$QuemOrdena." ".parent::getTipoOrdenacao();        }        else        {            $Ordem = " ORDER BY ".$Chave." ".parent::getTipoOrdenacao();        }        //Não é Paginado        if($QLinhas == 0)        {            return $this->Con->executar($Sql." ".$Ordem);        }        //Definir Limit        if($LimitAtivo)        $Limit = ($QLinhas <> 0) ? " LIMIT ".$Inicio.",".$QLinhas : "";              //Retorno        $RS =  $this->Con->executar($Sql.$Ordem.$Limit);        return $RS;    }    /**    *	Retorna um ResultSet com um numero determinado de QLinhas    *	@param QLinhas Inteiro - Número de QLinhas a retotnar no RS    *	@param Sql String - Query SQL que irá selecionar os dados    *	@param PaginaAtual Inteiro - Página atual dos QLinhas    * 	@param IrParaPagina Booleano - Ir diretamente para a página desejada habilitar ou não esta opação na paginação    *	@return Booleano    */    public function listaResultados()    {        $QLinhas       = parent::getQLinhas();        $PaginaAtual   = parent::getPaginaAtual();        $QuemOrdena    = parent::getQuemOrdena();        $MetodoFiltra  = parent::getMetodoFiltra();        $IrParaPagina  = parent::getIrParaPagina();        $AlterarLinhas = parent::getAlterarLinhas();        //Intancia Formulário        $Form = new FormCampos();                if(substr_count(strtoupper(parent::getSql()),'SELECT ') > 1)        {            $NumLinhas = $this->Con->execNLinhas(parent::getSql());        }        else        {            $NumLinhas = $this->Con->execRLinha($this->converteSql(parent::getSql()));        }                //Total de Páginas        $TotalPaginas = ceil($NumLinhas / $QLinhas);        //Paginação Dinamica        if($AlterarLinhas === true)        {            $AGeradoT = range(1,200);            $ArrayPaginasT = array_combine($AGeradoT,$AGeradoT);            //Gera Campo ListBox            $NRegistrosForm = $Form->listaVetor(array(            "Nome"        => "SIS_N_REGISTROS",            "Valor"       => $QLinhas,            "Inicio"      => false,            "Ordena"      => false,            "Adicional"   => 'class="sis_alterar_paginacao_form" onChange="sis_altera_paginacao(this.value,\''.MODULO.'\')"',            "Vetor"       => $ArrayPaginasT),false);            $NRegistros = '<span class="sis_alterar_paginacao">Mostrando '.$NRegistrosForm.' registros por página</span>';        }        else        {            $NRegistrosForm = $QLinhas;            $NRegistros     = '';        }                //Imprimindo QLinhas        if($TotalPaginas > 1)        {            //Verifica se existe variavel para QuemOrdenaeio de ordenação            if(!empty($QuemOrdena)) Parametros::setParametros("Full",array("QuemOrdena"=>$QuemOrdena));            //Para List            $ParametrosList = Parametros::getQueryString();            //Primeira            if($PaginaAtual > 1)            {                Parametros::setParametros("Full",array("PaginaAtual"=>1));                $Parte1 .= "<span class=\"paginacao\"><a href=\"javascript:".$MetodoFiltra."('".Parametros::getQueryString()."'); sis_spa('1');\" class=\"linkpag\"><img src=\"".$_SESSION['UrlBase']."figuras/vol.gif\" border=\"0\"/>&nbsp;Primeira</a></span>&nbsp;\n";            }            else            {                $Parte1 .= "<span class=\"paginacaoOff\"><img src=\"".$_SESSION['UrlBase']."figuras/vol_of.gif\"/>&nbsp;Primeira</span>&nbsp;\n";            }            //Próximo            if($PaginaAtual > 1)            {                Parametros::setParametros("Full",array("PaginaAtual"=>($PaginaAtual-1)));                $Parte1 .= "<span class=\"paginacao\"><a href=\"javascript:".$MetodoFiltra."('".Parametros::getQueryString()."'); sis_spa('".($PaginaAtual-1)."');\" class=\"linkpag\"><img src=\"".$_SESSION['UrlBase']."figuras/vol1.gif\" border=\"0\"/>&nbsp;Anterior</a></span>&nbsp;\n";            }            else            {                $Parte1 .= "<span class=\"paginacaoOff\"><img src=\"".$_SESSION['UrlBase']."figuras/vol1_of.gif\"/>&nbsp;Anterior</span>&nbsp;\n";            }            //Anterior            if($PaginaAtual < $TotalPaginas)            {                Parametros::setParametros("Full",array("PaginaAtual"=>($PaginaAtual+1)));                $Parte3 .= "<span class=\"paginacao\"><a href=\"javascript:".$MetodoFiltra."('".Parametros::getQueryString()."'); sis_spa('".($PaginaAtual+1)."'); \" class=\"linkpag\">Próxima&nbsp;<img src=\"".$_SESSION['UrlBase']."figuras/ava1.gif\" border=\"0\"/></a></span>&nbsp;\n";            }            else            {                $Parte3 .= "<span class=\"paginacaoOff\">Próximo&nbsp;<img src=\"".$_SESSION['UrlBase']."figuras/ava1_of.gif\" border=\"0\"/></strong></span>&nbsp;\n";            }            //Última            if($PaginaAtual < $TotalPaginas)            {                Parametros::setParametros("Full",array("PaginaAtual"=>$TotalPaginas));                $Parte3 .= "<span class=\"paginacao\"><a href=\"javascript:".$MetodoFiltra."('".Parametros::getQueryString()."'); sis_spa('".($TotalPaginas)."');\" class=\"linkpag\">Última&nbsp;<img src=\"".$_SESSION['UrlBase']."figuras/ava.gif\" border=\"0\"/></a></span>&nbsp;\n";            }            else            {                $Parte3 .= "<span class=\"paginacaoOff\">Último&nbsp;<img src=\"".$_SESSION['UrlBase']."figuras/ava_of.gif\" border=\"0\"/></strong></span>&nbsp;\n";            }            //Calculo de Páginas            if($PaginaAtual == 1)            {                $IPAG = 1;                $FPAG = $NumLinhas > $QLinhas ? $QLinhas : $NumLinhas;            }            else            {                $IPAG = ((($PaginaAtual - 1) * $QLinhas) + 1);                $FPAG = $PaginaAtual == $TotalPaginas ? $NumLinhas : $PaginaAtual * $QLinhas;            }            //Parte A            $Retorno .= $Parte1."&nbsp;";            //Parte B - Ir para Página            if($IrParaPagina === true)            {                Parametros::setParametros("Full",array("PaginaAtual"=>$PaginaAtual));                                //Gerando Arrays de Paginacao                $AGerado = range(1,$TotalPaginas);                $ArrayPaginas = array_combine($AGerado,$AGerado);                //Gera Campo ListBox                $CampoPaginas = $Form->listaVetor(array(                "Nome"        => "SIS_PAGINA",                "Identifica"  => "Página",                "Valor"       => $PaginaAtual,                "Inicio"      => false,                "Status"      => true,                "Ordena"      => false,                "Adicional"   => 'class="PaginacaoSelect" onChange="'.$MetodoFiltra.'(\''.$ParametrosList.'\&PaginaAtual=\'+this.value); sis_spa(this.value);"',                "Vetor"       => $ArrayPaginas),false);                $Retorno.= '<span id="sis_ir_para_pagina">'.$CampoPaginas.'</span>';            }            //Parte C            $Retorno .= "&nbsp;&nbsp;".$Parte3."&nbsp;&nbsp;&nbsp;<span class=\"paginacaoOff\"> ".$IPAG." - ".$FPAG." de ".$NumLinhas."</span>".$NRegistros;            return $Retorno;        }        else        {            $Resultado  = $NumLinhas.' registro'.($NumLinhas > 1 ? 's' : '').' encontrado'.($NumLinhas > 1 ? 's' : '');                        return '<span class="sis_alterar_paginacao_so">'.$Resultado.' - Mostrando até '.$NRegistrosForm.' registros por página </span>';        }    }        private function converteSql($Sql)    {        $Sql = preg_replace('/\s/i', ' ', $Sql);        $Sql = preg_replace('/SELECT.*FROM/i', 'SELECT COUNT(*) as Total FROM ', $Sql);                return $Sql;    }}