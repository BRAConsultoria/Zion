<?/** * @author Pablo Vanni - pablovanni@gmail.com * @since 23/02/2005 * Autualizada Por: Pablo Vanni - pablovanni@gmail.com<br> * @name  Paginação de resultado para uma consulta no banco de dados * @version 2.0 * @package Framework */namespace Zion\Paginacao;abstract class PaginacaoVO{    private $tipoOrdenacao; //String  - Indica o tipo de ordenação ASC ou DESC    private $quemOrdena; //String  - Indica um atributo especifico para ser ordenado    private $sql; //String  - Sql    private $tabelaMestra; //String  - Tabela que deve ser extraida no numero de registros    private $sqlContador; //String  - Sql responsável por contar número de registros da Grid    private $filtroAtivo; //Booleano - Deve indicar se existe ou não ocoorencia de filtro    private $limitAtivo; //Indica se o SELECT deve receber LIMIT's de Paginação    private $chave; //String  - Identificação da Chave Identificadora    private $metodoFiltra; //String  - Informa a Grid Qual Método ela deve chamar para executar o filtro    private $qLinhas; //Inteiro  - Informa o Número Maximo de Resultados por página    private $paginaAtual; //Inteiro  - Informa o número da pagina atual - Este numero é varivael de acordo com o numero de linhas    private $irParaPagina; //Booleano - Ir diretamente para a página desejada | Habilitar ou não esta opção na paginação    private $alterarLinhas; //Booleano - Mostrar opção para alterar o numero de linhas(resultados) de uma grid    public function __construct()    {        $this->filtroAtivo = false;        $this->limitAtivo = true;        $this->qLinhas = 0;        $this->paginaAtual = 1;        $this->irParaPagina = true;        $this->alterarLinhas = true;    }    public function setTipoOrdenacao($valor)    {        $this->tipoOrdenacao = $valor;    }    public function getTipoOrdenacao()    {        $Order = strtoupper($this->tipoOrdenacao);        return ($Order == "ASC") ? "ASC" : "DESC";    }    public function setQuemOrdena($valor)    {        $this->quemOrdena = $valor;    }    public function getQuemOrdena()    {        return $this->quemOrdena;    }    public function setSql($valor)    {        $this->sql = $valor;    }    public function getSql()    {        return $this->sql;    }    public function setTabelaMestra($valor)    {        $this->tabelaMestra = $valor;    }    public function getTabelaMestra()    {        return $this->tabelaMestra;    }    public function setSqlContador($valor)    {        $this->sqlContador = $valor;    }    public function getSqlContador()    {        return $this->sqlContador;    }    public function setFiltroAtivo($valor)    {        $this->filtroAtivo = $valor;    }    public function getFiltroAtivo()    {        return $this->filtroAtivo;    }    public function setLimitAtivo($valor)    {        $this->limitAtivo = $valor;    }    public function getLimitAtivo()    {        return $this->limitAtivo ? true : false;    }    public function setChave($valor)    {        $this->chave = $valor;    }    public function getChave()    {        return $this->chave;    }    public function setMetodoFiltra($valor)    {        $this->metodoFiltra = $valor;    }    public function getMetodoFiltra()    {        return (empty($this->metodoFiltra)) ? "sis_filtrar" : $this->metodoFiltra;    }    public function setQLinhas($valor)    {        $this->qLinhas = $valor;    }    public function getQLinhas()    {        return(is_numeric($this->qLinhas)) ? $this->qLinhas : 0;    }    public function setPaginaAtual($valor)    {        $this->paginaAtual = $valor;    }    public function getPaginaAtual()    {        return (empty($this->paginaAtual)) ? 1 : $this->paginaAtual;    }    public function setIrParaPagina($valor)    {        $this->irParaPagina = (bool) $valor;    }    public function getIrParaPagina()    {        return $this->irParaPagina;    }    public function setAlterarLinhas($valor)    {        $this->alterarLinhas = (bool) $valor;    }    public function getAlterarLinhas()    {        return $this->alterarLinhas;    }    public function addVariaveisPaginacao(Array $variaveis, $metodoEnvio = 'GET')    {        Parametros::setParametros($metodoEnvio, $variaveis);    }}