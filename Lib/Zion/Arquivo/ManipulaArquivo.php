<?phpnamespace Zion\Arquivo;class ManipulaArquivo extends ManipulaDiretorio{    /**     * 	Recupera a extenssão de um arquivo atravez da String de seu nome     * 	@param Arquivo String - String de Nomenclatura     * 	@return Boolean     */    public function extenssaoArquivo($arquivo)    {        $vetExt = \explode(".", $arquivo);        return $vetExt[\count($vetExt) - 1];    }    /**     * 	Faz o upload de um arquivo     * 	@param Arquivo String - Endereão do arquivo a ser UPADO     * 	@param Destino String - Destino para onde o arquivo deve ser UPADO     * 	@param Manter String - Se valor de "manter" = "ok" não faz UPLOAD     * 	@param Tipos  Array - Tipos de arquivos que podem ser upados     * 	@return String     */    public function uploadArquivo($arquivo, $destino, $posicao = false)    {        //Dados do File        $nomeTemporario = ($posicao === false) ? $_FILES[$arquivo]['tmp_name'] : $_FILES[$arquivo]['tmp_name'][$posicao];        $postMax = \ini_get("post_max_size");        $upMax = \ini_get("upload_max_filesize");        //Menor Tamanho de Configuração        $tMax = $postMax > $upMax ? $upMax : $postMax;        //Verifica a integridade do arquivo        if (!$this->arquivoExiste($nomeTemporario)){            throw new \Exception("O Arquivo não foi carregado, certifique-se que o tamanho do arquivo não tenha ultrapassado " . $tMax . " pois, este tamanho é o maximo permitido pelo seu servidor.");        }                //Verifica se a pasta permite gravação        if (!$this->permiteEscrita(\dirname($destino))){            throw new \Exception("A pasta onde você esta tentando gravar o arquivo não tem permissão de escrita, contate o administrador do sistema.");        }                //Verifica se o arquivo ja existe        if ($this->integridade($destino)) {            //Se sim verifica se tem permissão para substitui-lo            if (!$this->permiteEscrita($destino)){                throw new \Exception("Este arquivo já existe e você não tem permissão para substituí-lo.");            }        }        //Upload        if (!\move_uploaded_file($nomeTemporario, $destino)){            throw new \Exception("Não foi possivel fazer o upload!" . $destino);        }    }}