<? /***	@copyright DEMP - Soluções em Tecnologia da Informação Ltda*	@author Pablo Vanni - pablovanni@gmail.com*	@since 23/02/2005*	<br>Última Atualização: 05/04/2007<br>*	Autualizada Por: Pablo Vanni - pablovanni@gmail.com<br>*	@name Maniulação de Variaveis de entrada e saída* 	@version 2.0* 	@package Framework*/class Variaveis{ 						/**	*	Limpando caracteres em branco do inicio e fim da string	*	@param Var String - Variavel a ser manipulada	*	@return String	*/	public function limpa($Var)	{ 		return trim($Var); 	} 	/**	*	Tratando caracteres especiais da string	*	@param Var String - Variavel a ser manipulada	*	@return String	*/	public function converteHTML($Var)	{		return htmlspecialchars($Var, ENT_QUOTES);	}		public function trataAspas($Var)	{		if(get_magic_quotes_gpc())		{			return $Var;		}		else 		{			return addslashes($Var);		}		}	/**	*	Tratando e Limpando ao mesmo tempo	*	@param Var String - Variavel a ser manipulada	*	@return String	*/	public function limpaConverte($Var)	{		return $this->converteHTML($this->limpa($Var));	}		/**	*	Passa determinada função a todos o elementos de um Array()	*	@param Var String - Variavel a ser manipulada	*	@return String	*/	public function passaFuncao($Arr, $Funcao)	{		return array_map($Funcao, $Arr);	}			/**	*	Retorna a Data e Hora Atual do Servidor	*	@return String	*/	public function dataHora()	{		return date("Y/m/d H:i:s");	}		/**	*	Retorna a Data Atual do Servidor	*	@return String	*/	public function dataAtual()	{		return date("Y/m/d");	}		public function buscaDataSeparador($Data)	{		if($Data{2} == "/") return "/";		if($Data{5} == "/") return "/";		if($Data{2} == "-") return "-";		if($Data{5} == "-") return "-";		if($Data{4} == "-") return "-";		return "/";	}		public function nullReturn($Valor, $Aspas)	{		if($Aspas == false)		{                    return ($Valor == "") ? "NULL" : $Valor;		}		else 		{			return ($Valor == "") ? "NULL" : "'".$Valor."'";		}	}		/**	*	Verifica o tamnho de uma string em caracteres	*	@param String String - String a Ser manipulada	*	@return Inteiro	*/	public function tamanho($String)	{		return strlen($String);	}}?>