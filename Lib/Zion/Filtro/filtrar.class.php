<?include_once($_SESSION['FMBase'] . 'funcoes_php.class.php');class Filtrar {    private $FPHP;    private $ObjForm;    private $Situacao; //Situação do Filtro;    private $Operadores = array();    public function __construct($Obj = null) {        $this->FPHP = new FuncoesPHP();        $this->setSituacao(false);        if (is_object($Obj))            $this->ObjForm = $Obj;        $this->Operadores =                array("=" => "=",                    ">" => ">",                    "<" => "<",                    ">=" => ">=",                    "<=" => "<=",                    "<>" => "<>",                    "*A" => "*A",                    "A*" => "A*",                    "*" => "*",                    "E" => "E",                    "OU" => "OU");    }    public function getStringSql($NomeCampo, $CampoBanco, $TipoFiltro = null) {        //Inicia Html        $Sql = "";        //Recupera Valores do Formulário        $Operador = html_entity_decode($_GET["hidden_sis_filtro_" . $NomeCampo]);        $TipoCampo = $_GET["hiddent_sis_filtro_" . $NomeCampo];        //Intercepta valor        //if($_GET[$NomeCampo] == '') return '';        //Valor        $Valor = $this->ObjForm->getCampoFiltro($NomeCampo, $TipoFiltro);        //Valida Informações        if ($Operador == "" or $TipoCampo == "") {            if ($Valor <> "") {                $this->setSituacao(true);                return " AND " . $CampoBanco . " = '" . $Valor . "' ";            }            return $Sql;        }        //Retorna Sql	        if ("$Valor" <> "" or ($Operador == "E" or $Operador == "OU")) {            if (in_array($Operador, $this->Operadores)) {                switch ($Operador) {                    case "=": case ">": case "<": case ">=": case "<=": case "<>":                        if ($TipoCampo <> "Float" and $TipoCampo <> "Inteiro")                            $Valor = "'$Valor'";                        $Sql = " AND $CampoBanco $Operador $Valor ";                        $this->setSituacao(true);                        break;                    case "*A":                        $Sql = " AND $CampoBanco LIKE '%$Valor' ";                        $this->setSituacao(true);                        break;                    case "A*":                        $Sql = " AND $CampoBanco LIKE '$Valor%' ";                        $this->setSituacao(true);                        break;                    case "*":                        $Sql = " AND $CampoBanco LIKE '%$Valor%' ";                        $this->setSituacao(true);                        break;                    case "E":                        $Sql = $this->eOrSql($CampoBanco, $NomeCampo, $TipoFiltro, "E");                        break;                    case "OU":                        $Sql = $this->eOrSql($CampoBanco, $NomeCampo, $TipoFiltro, "OR");                        break;                    default:                        $Sql = '';                        break;                }            }        }        return $Sql;    }    //Para clausulas E e OR    private function eOrSql($CampoBanco, $NomeCampo, $TipoFiltro, $Clausula)     {        $OperadorB = "";        $ValorB    = "";                $Multiplo = is_array($_GET[$NomeCampo . "A"]);        $OperadorA = html_entity_decode($_GET["hidden_sis_filtro_" . $NomeCampo . "A"]);        $ValorA = trim($_GET[$NomeCampo . "A"]);        if (!$Multiplo) {            $OperadorB = html_entity_decode($_GET["hidden_sis_filtro_" . $NomeCampo . "B"]);            $ValorB = trim($_GET[$NomeCampo . "B"]);        }        //Recupera Tipo de Campo        $TipoCampo = $_GET["hiddent_sis_filtro_" . $NomeCampo];        //Validação de Operadores        if (($OperadorA == "" and $OperadorB == "") or $TipoCampo == "")            return "";        //Validação de Valores        if ($ValorA == "" and $ValorB == "")            return "";        //Seta e Recupera Valores        if ($ValorA <> "") {            //Valida Opreador A            if (!in_array($OperadorA, $this->Operadores))                return "";            //Seta Valores            if(!$Multiplo)            {                $this->ObjForm->setCampoRetorna($NomeCampo . "A", $ValorA);                $ValorA = $this->ObjForm->getCampoFiltro($NomeCampo . "A", $TipoFiltro);            }                   }        if ($ValorB <> "") {            //Valida Opreador B            if (!in_array($OperadorB, $this->Operadores))                return "";            //Seta Valores            $this->ObjForm->setCampoRetorna($NomeCampo . "B", $ValorB);            $ValorB = $this->ObjForm->getCampoFiltro($NomeCampo . "B", $TipoFiltro);        }        if ($TipoCampo <> "Float" and $TipoCampo <> "Inteiro" and !$Multiplo) {            if ($ValorA <> "")                $ValorA = "'$ValorA'";            if ($ValorB <> "")                $ValorB = "'$ValorB'";        }        //Se valor a vazio e b não inverte        if ($ValorB <> "" and $ValorA == "") {            $ValorA = $ValorB;            $OperadorA = $OperadorB;            $ValorB = "";            $OperadorB = "";        }        //Se os dois operadores são iguais mude para ow a não ser que seja <> ow =        if ($ValorB <> "")            if (($OperadorA == $OperadorB and $OperadorA <> "<>") or $OperadorB == "=")                $Clausula = "OR";        if($Multiplo)        {                       if($_GET[$NomeCampo . "A"][0] == "" and count($_GET[$NomeCampo . "A"]) <= 1)            return '';                                $Sql = " AND $CampoBanco IN ( ";                        foreach($_GET[$NomeCampo . "A"] as $ValorSelecionado)            {                if($ValorSelecionado <> "")                $Sql .= " '".$this->FPHP->converteHTML ($ValorSelecionado)."' ,";            }                        $Sql = substr($Sql, 0,-1);                        $Sql .= " ) ";                    }        else        {            if ($Clausula == "E") {                if ($ValorB <> "") {                    $Sql = " AND $CampoBanco $OperadorA $ValorA AND $CampoBanco $OperadorB $ValorB ";                } else {                    $Sql = " AND $CampoBanco $OperadorA $ValorA ";                }                $this->setSituacao(true);            } elseif ($Clausula == "OR") {                if ($ValorB <> "") {                    $Sql = " AND (($CampoBanco $OperadorA $ValorA) OR ($CampoBanco $OperadorB $ValorB)) ";                } else {                    $Sql = " AND $CampoBanco $OperadorA $ValorA ";                }                $this->setSituacao(true);            }        }                return $Sql;    }    function getHiddenParametros($ArrayParametros) {        $Retorno = array();        if (is_array($ArrayParametros) and !empty($ArrayParametros)) {            foreach ($ArrayParametros as $Campo) {                //Intecepta E ou OU                $CampoEOU = $_GET['hidden_sis_filtro_' . $Campo];                if ($CampoEOU == "E" or $CampoEOU == "OU") {                    $ValorA = $_GET[$Campo . "A"];                    $ValorB = $_GET[$Campo . "B"];                    $OpcaoA = $_GET['hidden_sis_filtro_' . $Campo . "A"];                    $OpcaoB = $_GET['hidden_sis_filtro_' . $Campo . "B"];                    $Tipo = $_GET['hiddent_sis_filtro_' . $Campo];                    if ($ValorA <> "") {                        if ($OpcaoA <> "" and $Tipo <> "") {                            $Retorno[] = $Campo . "A";                            $Retorno[] = 'hidden_sis_filtro_' . $Campo . "A";                        }                    }                    if ($ValorB <> "") {                        if ($OpcaoB <> "" and $Tipo <> "") {                            $Retorno[] = $Campo . "B";                            $Retorno[] = 'hidden_sis_filtro_' . $Campo . "B";                        }                    }                    //Tipo E e Ou                    if ($ValorA <> "" or $ValorB <> "") {                        $Retorno[] = 'hidden_sis_filtro_' . $Campo;                        $Retorno[] = 'hiddent_sis_filtro_' . $Campo;                    }                } else {                    $Valor = $_GET[$Campo];                    $Opcao = $_GET['hidden_sis_filtro_' . $Campo];                    $Tipo = $_GET['hiddent_sis_filtro_' . $Campo];                    if ($Valor <> "") {                        if ($Opcao <> "" and $Tipo <> "") {                            $Retorno[] = 'hidden_sis_filtro_' . $Campo;                            $Retorno[] = 'hiddent_sis_filtro_' . $Campo;                        }                    }                }            }            return $Retorno;        } else {            return $Retorno;        }    }    //Metodo para interceptar registros selecionados da grid    public function printSql($CheveCompara, $Array) {        $Sql = ' AND ' . $CheveCompara . ' IN (';        if (is_array($Array) and count($Array) > 0) {            $Sql .= implode(',', $Array);            $this->setSituacao(true);        } else {            return "";        }        return $Sql . ') ';    }    public function setSituacao($Valor) {        $this->Situacao = $Valor === true ? true : false;    }    public function getSituacao() {        return $this->Situacao;    }}