<? /***	@copyright DEMP - Soluções em Tecnologia da Informação Ltda*	@author Pablo Vanni - pablovanni@gmail.com*	@since 18/11/2005*	<br>Última Atualização: 16/05/2006<br>*	Autualizada Por: Pablo Vanni - pablovanni@gmail.com<br>*	@name Cria uma grid de resultados com paginação* 	@version 2.0* 	@package Framework*///Classes Nescessáriasinclude_once($_SESSION['FMBase'].'paginacao.class.php');include_once($_SESSION['FMBase'].'conexao.class.php');include_once($_SESSION['FMBase'].'tabelas.class.php');include_once($_SESSION['FMBase'].'botoes_acesso.class.php');include_once($_SESSION['FMBase'].'grid.class.php');class GridVisualizar extends Grid {	/**	*	Atributos da Classe	*/		private $Con, $Pag, $Tab, $ExibeErroGrid;		/**	*	Metodo Construtor	*	@return VOID	*/	public function GridVisualizar()	{		$this->Con = Conexao::conectar();		$this->Pag = new Paginacao();		$this->Tab = new Tabelas();		$this->ExibeErroGrid = true;	}				public function montaGridVisualizar()	{								//Recupera Valores		$Sql          = parent::getSql();		$Titulos      = parent::getTitulos();		$Listados     = parent::getListados();		$Chave        = parent::getChave();        $FormatarComo = parent::getFormatarComo();						//Verifica se o SQL não esta Vazio		if(empty($Sql))	throw new Exception("Valor selecionado é inválido");        //Se Formatações existem, intancie funções PHP        if(!empty($FormatarComo))  $FPHP = new FuncoesPHP();				//Iniciando valores		$I        = 0;		$Html     = "";						$Exec    = $this->Con->executar($Sql);		$NLinhas = $this->Con->nLinhas($Exec);					//Contruindo grid		if($NLinhas > 0)		{						$Html .= $this->Tab->tabIni(null, null, null, null, "tableGrid"); 						//Objeto de Converssão			$ObjC = $this->getObjetoConverte();									while($Linha = @mysqli_fetch_array($Exec))			{				$I += 1; 				$ClassCor  = $I % 2 == 0 ? ConfigSIS::$CFG['CorZebraA'] : ConfigSIS::$CFG['CorZebraB'];												foreach($Listados as $Key=>$Value)				{					//Valor com possivel conversão					$ValorItem = (!empty($ObjC[$Value])) ? $this->converteValor($Linha, $ObjC[$Value]) : $Linha[$Value];										//Formatação                    if(!empty($FormatarComo))                    {                        if(!empty($FormatarComo[$Value]))                        {                            $Como = strtoupper($FormatarComo[$Value]);                            switch ($Como)                            {                                case "DATA"    : $ValorItem = $FPHP->convertData($ValorItem);     break;                                case "DATAHORA": $ValorItem = $FPHP->convertDataHora($ValorItem); break;                                case "NUMERO"  : $ValorItem = $FPHP->floatCliente($ValorItem);    break;                                case "MOEDA"   : $ValorItem = $FPHP->moedaCliente($ValorItem);    break;                            }                        }                    }                    if($ValorItem <> "")					{						//Titulo Iten						$TituloIten = $Titulos[$Key];												$Html .= $this->Tab->abreTr();																						$Html .= $this->Tab->abreTd(null, "textoTituloGrid $ClassCor");						$Html .= ($TituloIten == "") ? "&nbsp;" : $TituloIten.":";						$Html .= $this->Tab->fechaTd();							$Html .= $this->Tab->abreTd(null, "textoGrid $ClassCor");						$Html .= ($ValorItem == "") ? "&nbsp;" : $ValorItem;						$Html .= $this->Tab->fechaTd();												$Html .= $this->Tab->fechaTr();					}				}								//Espaço				$Html .= $this->Tab->abreTr().$this->Tab->abreTdMescla(2)."<hr />".$this->Tab->fechaTd().$this->Tab->fechaTr();			}									$Html .= $this->Tab->tabFim();		}		else		{			if($this->ExibeErroGrid)				return "<div class=\"semResultado\">&nbsp;Nenhum resultado encontrado.</div>";					}								return $Html;	}			public function mostraGridVazia($Exibe = true)	{		$this->ExibeErroGrid = $Exibe;	}}?>