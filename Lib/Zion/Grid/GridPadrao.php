<?php/** *   @copyright CenterSis - Sistemas Para Internet *   @author Pablo Vanni - pablovanni@gmail.com *   @since 18/11/2005 *   Última Atualização: 13/10/2014 *   Autualizada Por: Pablo Vanni - pablovanni@gmail.com *   @name Cria uma grid de resultados com paginação */namespace Zion\Grid;class GridPadrao extends Grid{    private $con;    private $pag;    private $tab;    public function __construct($con = NULL)    {        parent::__construct();        $this->con = (!is_object($con)) ? \Zion\Banco\Conexao::conectar() : $this->con = $con;        $this->pag = new \Zion\Paginacao\Paginacao($con);        $this->tab = new \Zion\Layout\Html();        //Padrões Iniciais        parent::setTipoOrdenacao(filter_input(INPUT_GET, 'to'));        parent::setQuemOrdena(filter_input(INPUT_GET, 'qo'));        parent::setPaginaAtual(filter_input(INPUT_GET, 'pa'));        parent::setQLinhas(10); //ConfigSIS::$CFG['qLinhasGrid']    }    public function tituloGridPadrao()    {        $titulos = parent::getTitulos();        $listados = parent::getListados();        //$html = $this->tab->abreTr();        $html = $this->tab->abreTagAberta('tr');        //$html .= $this->tab->abreTd('checkFill', ConfigSIS::$cFG['ClassTitulo']) . '<input type="checkbox" name="checkTodos" id="checkTodos" value="null" onclick="sis_selecionar()" />' . $this->tab->fechaTd();        $html .= $this->tab->abreTagAberta('td');        $html .= $this->tab->abreTagFechada('input', ['type' => 'checkbox', 'name' => 'checkTodos', 'id' => 'checkTodos', 'value' => '']);        $html .= $this->tab->fechaTag('td');        //Titulos        foreach ($titulos as $Key => $value) {            //Alinhamento            $classAlinha = parent::getAlinhamento($listados[$Key]);            //$html .= $this->tab->abreTd(null, ConfigSIS::$cFG['ClassTitulo'] . $classAlinha);            $html .= $this->tab->abreTagAberta('td', ['class' => $classAlinha]);            $html .= parent::ordena($value, $listados[$Key]);            //$html .= $this->tab->fechaTd();            $html .= $this->tab->fechaTag('td');        }        //$html .= $this->tab->fechaTr();        $html .= $this->tab->fechaTag('td');        return $html;    }    /**     * 	Contrução da Grid de Dados     * 	@param Opcoes Array - Indica se cada item deve ser habilitado     * 	@param QLinhas Inteiro - Número de Resultados por pagina     * 	@param PaginaAtual Inteiro - Número da Pagina Atual     * 	@param Parametros String - Query String com parametros nescessarios      * 	@return String     */    public function montaGridPadrao()    {        //Recupera Valores        $sql = parent::getSql();        $tabelaMestra = parent::getTabelaMestra();        $sqlContador = parent::getSqlContador();        $filtroAtivo = parent::getFiltroAtivo();        $limitAtivo = parent::getLimitAtivo();        $listados = parent::getListados();        $chave = parent::getChave();        $formatarComo = parent::getFormatarComo();        $totalizador = parent::getTotalizador();        $larguras = parent::getLarguraFixa();        $valorTotalizadores = array();        $qLinhas = parent::getQLinhas();        //Verifica se o SQL não esta Vazio        if (empty($sql)) {            throw new Exception("Valor selecionado inválido!");        }        //Se Formatações existem, intancie funções PHP        if (!empty($formatarComo)) {            $fPHP = new \Zion\Validacao\Valida();        }        //Iniciando valores        $i = 0;        $html = "";        $paginado = "";        //Monta Paginanação        if ($qLinhas > 0) {            //Setando Valores para paginação            $this->pag->setSql($sql);            $this->pag->setTabelaMestra($tabelaMestra);            $this->pag->setSqlContador($sqlContador);            $this->pag->setFiltroAtivo($filtroAtivo);            $this->pag->setLimitAtivo($limitAtivo);            $this->pag->setChave($chave);            $this->pag->setQLinhas($qLinhas);            $this->pag->setPaginaAtual(parent::getPaginaAtual());            $this->pag->setTipoOrdenacao(parent::getTipoOrdenacao());            $this->pag->setQuemOrdena(parent::getQuemOrdena());            $this->pag->setMetodoFiltra(parent::getMetodoFiltra());            $this->pag->setAlterarLinhas(parent::getAlterarLinhas());            $rs = $this->pag->rsPaginado();            $paginado = $this->pag->listaResultados();        } else {            $rs = $this->con->executar($sql);        }        $nLinhas = $this->con->nLinhas($rs);        //Contruindo grid        if ($nLinhas > 0) {            //$html .= $this->tab->tabIni(null, null, 1, null, "tableGrid");            $html .= $this->tab->abreTagAberta('table');            //Objeto de Converssão (Objeto Pastor :D)            $ObjC = $this->getObjetoConverte();            //Estilos de um resultado (ESTILO DE RESULTADO ÚNICO)            $eRU = $this->getCondicaoResultadoUnico();            $eTR = $this->getCondicaoTodosResultados();            while ($linha = $rs->fetch_array()) {                $i += 1;                //$classCor = $i % 2 == 0 ? ConfigSIS::$cFG['CorZebraA'] : ConfigSIS::$cFG['CorZebraB'];                $cRT = "";                if (is_array($eTR)) {                    foreach ($eTR as $rT) {                        if ($this->resultadoEval($linha, array($rT[0])) === true) {                            $cRT = $rT[1];                        }                    }                }                if ($i == 1) {                    $html .= $this->tituloGridPadrao(true);                }                //$html .= $this->tab->abreTr();                $html .= $this->tab->abreTagAberta('tr');                //$html .= $this->tdCheck("SisReg[" . $linha[$chave] . "]", "SisReg" . $linha[$chave], $linha[$chave], $classCor . " $cRT largCheck");                $html .= $this->tab->abreTagAberta('td');                $html .= '[]';                $html .= $this->tab->fechaTag('td');                foreach ($listados as $value) {                    //Valor com possivel converssão                    $valorItem = (!empty($ObjC[$value])) ? $this->converteValor($linha, $ObjC[$value]) : $linha[$value];                    //Estilo de Resultado Único                    $cRU = "";                    if (!empty($eRU[$value])) {                        if ($this->resultadoEval($linha, $eRU[$value]) === true) {                            $cRU = $eRU[$value][1];                        }                    }                    //Formatação                    if (!empty($formatarComo)) {                        if (!empty($formatarComo[$value])) {                            $como = strtoupper($formatarComo[$value]);                            switch ($como) {                                case "DATA" : $valorItem = $fPHP->data()->converteData($valorItem);                                    break;                                case "DATAHORA": $valorItem = $fPHP->data()->converteDataHora($valorItem);                                    break;                                case "NUMERO" : $valorItem = $fPHP->numero()->floatCliente($valorItem);                                    break;                                case "MOEDA" : $valorItem = $fPHP->numero()->moedaCliente($valorItem);                                    break;                            }                        }                    }                    //Totalizadores                    if (!empty($totalizador)) {                        if (!empty($totalizador[$value])) {                            $valorTotalizadores[$value][] = $valorItem;                        }                    }                    //Alinhamento                    $classAlinha = parent::getAlinhamento($value);                    //$html .= $this->tab->abreTd(null, "textoGrid $classCor $cRU $cRT $cSSL $classAlinha", "", $larguras[$value]);                    $html .= $this->tab->abreTagAberta('td');                    $html .= ($valorItem == "") ? "&nbsp;" : $valorItem;                    //$html .= $this->tab->fechaTd();                    $html .= $this->tab->fechaTag('td');                }                //$html .= $this->tab->fechaTr();                $html .= $this->tab->fechaTag('tr');            }            /* Totalizadores da Grid */            if (!empty($totalizador)) {                //$html .= $this->tab->abreTr("", "sis_grid_totalizado");                $html .= $this->tab->abreTagAberta('tr');                //Td de Checagem                //$html .= $this->tab->abreTd() . "&nbsp;" . $this->tab->fechaTd();                $html .= $this->tab->abreTagAberta('td');                foreach ($listados as $itenListado) {                    //Alinhamento                    $classAlinha = parent::getAlinhamento($itenListado);                    //$html .= $this->tab->abreTd(null, $classAlinha);                    $html .= $this->tab->abreTagAberta('td');                    $html .= parent::processaTotalizador($totalizador[$itenListado], $valorTotalizadores[$itenListado]);                    //$html .= $this->tab->fechaTd();                    $html .= $this->tab->fechaTag('td');                }                $html .= $this->tab->fechaTr();            }            //$html .= $this->tab->tabFim();            $html .= $this->tab->fechaTag('table');        } else {            return '<div class="semResultado">&nbsp;Nenhum resultado encontrado.</div>';        }        if (!empty($paginado) or ! empty($totalizador)) {            $resultado = '<div class="classPaginacao">' . $paginado . '</div>';            return $resultado . $html . $resultado;        } else {            return $html;        }    }    public function tdCheck($nome, $id, $valor, $classCor)    {        //return $this->tab->abreTd('checkFill', $classCor) . '<input type="checkbox" name="' . $nome . '" id="' . $id . '" value="' . $valor . '" />' . $this->tab->fechaTd();        return $this->tab->abreTagAberta('td') . $this->tab->abreTagAberta('input', ['type' => 'checkbox']) . $this->tab->fechaTag('td');    }}